version: '3.8'

services:
  # Jaeger - Distributed tracing
  jaeger:
    image: jaegertracing/all-in-one:1.51
    container_name: launchkit-jaeger
    ports:
      - "16686:16686"  # Jaeger UI
      - "14268:14268"  # Jaeger HTTP collector
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - observability

  # OpenTelemetry Collector - Receives telemetry data
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.88.0
    container_name: launchkit-otel-collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./api/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "8888:8888"   # Prometheus metrics endpoint
      - "8889:8889"   # Prometheus exporter metrics
    depends_on:
      - jaeger
      - prometheus
    networks:
      - observability

  # Prometheus - Metrics storage and querying
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: launchkit-prometheus
    ports:
      - "9090:9090"   # Prometheus UI
    volumes:
      - ./api/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - observability

  # Grafana - Dashboards and visualization
  grafana:
    image: grafana/grafana:10.1.0
    container_name: launchkit-grafana
    ports:
      - "3010:3000"   # Grafana UI
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./api/grafana/provisioning:/etc/grafana/provisioning
      - ./api/grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus
    networks:
      - observability

networks:
  observability:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
